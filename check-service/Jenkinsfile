pipeline {
    agent any
    environment {
        DOCKER = 'sudo docker'
    }

    stages {
        stage('Clone Repository') {
            steps {
                checkout scm
                echo 'Checkout Scm'
            }
        }

        stage('Set Environment') {
            steps {
                echo "Copy require file to pipeline folder"
                sh 'mkdir -p ./check-service/src/main/resources/secret'
                sh 'cp /var/jenkins_home/util/check-service/application-secret.yml ./check-service/src/main/resources/secret/application-secret.yml'
            }
        }

        stage('Build image') {
            steps {
                sh 'ls -al'
                dir('check-service') {
                    sh 'ls -al'
                    sh 'chmod +x ./gradlew'
                    sh './gradlew build'
                    sh 'docker build -t check-service .'
                }
                echo 'Build image...'
            }
            post {
                success {
                    echo 'Build Success'
                }
                failure {
                    echo 'Build Failed'
                }
            }
        }

        stage('Remove Previous image') {
            steps {
                script {
                    try {
                        sh 'docker stop journeymate-check-service'
                        sh 'docker rm journeymate-check-service'
                    } catch (e) {
                        echo 'fail to stop and remove container'
                    }
                }
            }
        }
        stage('Run New image') {
            steps {
                sh 'docker run --name journeymate-check-service -d -p 8300:8300 check-service'
                echo 'Run New member image'
            }
        }
    }
}
